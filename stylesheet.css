*,
*::after,
*::before {
  box-sizing: border-box;
}

:root {
  --cell-size: 100px;
  --mark-size: calc(var(--cell-size) * 0.9);
}
body {
  margin: 0;
}

.gameBoard {
  width: 100vw;
  height: 100vh;
  display: grid;
  justify-content: center;
  align-content: center;
  justify-items: center;
  align-items: center;
  grid-template-columns: repeat(3, auto);
}

.hidden {
  display: none;
}

.cell {
  width: var(--cell-size);
  height: var(--cell-size);
  border: 1px solid black;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: pointer;
}

.cell.x,
.cell.o {
  cursor: not-allowed;
}

.cell.x::before,
.cell.x::after {
  content: "";
  position: absolute;
  width: calc(var(--mark-size) * 0.15);
  height: var(--mark-size);
  background-color: black;
}
.cell.x::before {
  transform: rotate(45deg);
}

.cell.x::after {
  transform: rotate(-45deg);
}

.cell.o::before,
.cell.o::after {
  content: "";
  position: absolute;
  border-radius: 50%;
}
.cell.o::before {
  width: var(--mark-size);
  height: var(--mark-size);
  background-color: black;
}
.cell.o::after {
  width: calc(var(--mark-size) * 0.7);
  height: calc(var(--mark-size) * 0.7);
  background-color: white;
}
.winStatement {
  color: white;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgb(0, 0, 0);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: column;
}
.winStatement button {
  cursor: pointer;
  background-color: white;
}
.winStatement.show {
  display: flex;
}
